---
first_name: Adam
last_name: Hawkins
location: Honolulu, HI
phone: "+1 808 201 2215"
tag_line: "Velocity, Reliability, Quality focused Software Professional"
github: "https://github.com/ahawkins"
twitter: "https://twitter.com/adman65"
linkedin: "https://www.linkedin.com/in/adam-hawkins-53109b14b/"
website: "https://www.slashdeploy.com"
email: "adam@slashdeploy.com"
archive: "https://www.slashdeploy.com/archive"
intro: |
  I have 10 years of experience developing, deploying, and running web services
  mixed between remote freelance work and on-site fulltime employment.

  My goal is to accelerate software delivery, increase reliability, and
  eliminate regressions. My core competency is developing, deploying, and
  running cloud based web-services with DevOps and Site Reliability
  Engineering practices.

  I'm seeking remote employment as a Fullstack Engineer, DevOps Engineer, or
  Site Reliability Engineer.
background: |
  I started building webapps with PHP and jumped to Ruby on Rails. I learned
  software engineering fundamentals like OOP, TDD, and software architecture
  through the Ruby community. Eventually I switched focus to operations,
  infrastructure engineering, and continuous delivery under the broad Site
  Reliability Engineering umbrella.
skills: |
  TDD, CI/CD, AWS (CloudFormation/DynamoDB/EC2/S3/Lambda/and more), GCP,
  Docker, Kubernetes, kops, Helm, Packer, Ansible, Bash, Ruby, Rails, Sinatra,
  Emberjs, TypeScript, Serverless, Vagrant, technical writing, git, PostgreSQL,
  MongoDB, Redis, Memcached, Fluentd, ElasticSearch, statsd, Heroku, software
  architecture
bio: |
  I'm originally from the United States. I moved abroad in 2011 for work and
  travel. I have lived in Finland, Germany, Sweden, and India before returning
  to the United States in 2019. Hobbies include
  [travel](http://isos.ahawkins.me), reading, trance, hiking, and surfing.
  MacOS, vim, a terminal, and HD280's is my preferred [dev
  setup](https://github.com/ahawkins/dotfiles).
expertise:
  - title: Full-Stack
    description: |
      "You build it, you run it" is my default mode. Expertise with
      [Ruby](https://www.joyofdesign.info) (and
      [Rails](https://railscaching.com)), JavaScript, Node.js, Bash, Docker,
      Kubernetes, and AWS means I can transform business requirements into
      running software.
      [TDD](https://www.slashdeploy.com/blog/2014/the-joy-of-teaching-tdd/) and
      continuous delivery ensure quality. I gravitate more to backend services,
      but I've shipped Ember applications too.
  - title: Deployment Pipelines
    description: |
      Continous delivery underpins successful software teams. I've built
      [golden
      image](http://semaphoreci.com/community/tutorials/continuous-deployment-of-golden-images-with-packer-and-semaphore)
      pipelines, Docker orchestration prior to Kubernetes, [Helm
      charts](https://www.slashdeploy.com/blog/2017/building-our-helm-chart/),
      and custom pipelines for serverless applications. My preferred tools are
      [Buildkite](https://www.slashdeploy.com/blog/2019/cd-chatops-with-slack-buildkite/),
      Containers, and
      [Ansible](https://semaphoreci.com/community/tutorials/introduction-to-ansible).
  - title: Site Reliability Engineering
    description: |
      On-call, disaster recovery, infrastructure migration, new product
      launches, and system maintenance are a few examples of my SRE work.
      I focus on removing toil, improving developer tooling, and
      fostering an operations-thinking culture. I share [public
      postmortems](https://engineering.saltside.se/our-failure-migrating-to-kubernetes-25c28e6dd604)
      when I can.
  - title: Teaching
    description: |
      I've taught thousands of engineers how to build, run, and deploy their
      own applications through my blog and freelance writing.  My work covers
      software design and building deploy pipelines. I also created video
      courses on Docker, Kubernetes, serverless, and AWS best practices.  Refer
      to my [archive](https://www.slashdeploy.com/archive) for a complete list
      of posts, tutorials, conference talks, webinars, and video courses.
experience:
  - timeframe: 2016 - Now
    company: Self-Employed
    position: Consultant and Technical Writer
    location: Remote
    description:
      - Developed and deployed web applications for clients
      - Wrote technical articles (blog posts, user-facing documentation, and whitepapers)
      - Produced Docker/Kubernetes/AWS/serverless video coures
      - Wrote educational email courses
      - Launched my own SaaS products
  - timeframe: 2016 - 2018
    company: Saltside, Pvt Ltd.
    location: Bangalore, IN
    position: SRE Team Lead
    description:
      - Bootstrapped a new 20 engineer PDC
      - Interviewed, trained, mentored junior to mid level employees
      - Conducted 1:1's and performance reviews
      - Managed production operations for internal and user facing services
      - Lead cross-functional post-mortems
      - Spread SRE practices through internal workshops
      - Increased velocity with automated topic-branch deployments and per-engineer sandboxes
      - Reviewed infrastructure and application code
      - Reduced AWS spend 25% through infrastructure optimizations
      - Rolled out production autoscaling for high-cost services
      - Migrated production and pre-production environments to Kubernetes
  - timeframe: 2014 - 2016
    company: Saltside, AB
    location: Gothenburg, SE
    position: Platform Team Lead
    description:
      - Built and deployed first revenue generating service
      - Introduced TDD to the wider development team
      - Responded to pages for interna and user-facing services
      - Lead team through ground-up rewrite
      - Split an untested monolithic system into a tested SoA systems (Ruby, Golang, Node.js, and Thrift)
      - Interviewed and training new team members
      - Set code standards
      - Oversaw architecture and API design for all public and private APIs
      - Oversaw cross-region AWS infrastructure design
      - Participated in architecture round-tables with CTO, Mobile, and Web team leads
  - timeframe: 2011 - 2014
    company: RadiumCRM, OY
    location: Helsinki FI, Hamburg DE
    position: Lead Developer
    description:
      - Added automated test coverage to the existing Rails application
      - Responsed to production pages
      - Participated in product roadmap and customer pitch meetings
      - Built APIs and integrations for B2B services
      - Released an API for a mobile application
      - Interview new hires
      - Pair programmed with team members
      - Built second product iteration as a Sinatra backend and Emberjs front-end
      - Defined test and code quality standards
  - timeframe: 2007 - 2009
    company: LARPD
    location: Livermore, CA
    position: Rails Developer
    description:
      - Replaced existing manual paper based employee scheduling system with a Rails application
      - Deployed application to Heroku
portfolio:
  - title: Billen
    year: 2019
    link: https://billen.app
    description: |
      SaaS product to fill the gap between Stripe and what businesses need. Rails
      & Heroku.
  - title: DevOps Course
    year: 2019
    link: https://freedevopscourse.com
    description: |
      An 8 part email course that covers DevOps principles and practices
      along with practical implementation advice.
  - title: TeamCI
    year: 2018
    link: https://teamci.co
    description: |
      SaaS product that applies a single linting standard to all team repos.
      Leverages GitHub, Buildkite, Heroku, Rails, Docker, and a [ton of bash](https://hackernoon.com/inside-teamcis-check-code-b12770de57a5).
  - title: Joy of Design
    year: 2014
    link: https://www.joyofdesign.info
    description: |
      A small book summarizing my take on software architecture with Ruby examples.
      One of my favorite works and still accurate to this day.
  - title: Rails Caching Guide
    year: 2012
    link: https://www.railscaching.com
    description: |
      Originally the "Advanced Rails Caching" blog post. I broke it out
      into an organized series and covered more topics (such as HTTP caching).
